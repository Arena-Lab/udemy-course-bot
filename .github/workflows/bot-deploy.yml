# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Deploy Bot to VPS

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'quicktrends_files/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      BOT_ENV: ${{ secrets.BOT_ENV }}
      VPS_HOST: ${{ secrets.VPS_HOST }}
      VPS_USER: ${{ secrets.VPS_USER }}
      VPS_PASS: ${{ secrets.VPS_PASS }}
    steps:
      - name: Trigger deploy on VPS
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ env.VPS_HOST }}
          username: ${{ env.VPS_USER }}
          password: ${{ env.VPS_PASS }}
          envs: BOT_ENV
          script: |
            set -euo pipefail
            REPO_URL="${{ github.server_url }}/${{ github.repository }}.git"
            if [ ! -d /opt/udemybot/.git ]; then
              mkdir -p /opt/udemybot
              git clone --depth=1 "$REPO_URL" /opt/udemybot
            else
              cd /opt/udemybot
              git fetch origin
              git reset --hard origin/main
            fi
            cd /opt/udemybot
            # Write bot .env from env if provided (multiline safe)
            if [ -n "${BOT_ENV:-}" ]; then
              printf "%s" "${BOT_ENV}" > /opt/udemybot/.env
              chmod 600 /opt/udemybot/.env
            fi
            # Ensure python virtualenv support on Debian/Ubuntu (root only)
            if command -v apt-get >/dev/null 2>&1 && [ "$(id -u)" -eq 0 ]; then
              apt-get update -y
              apt-get install -y python3-venv
            fi
            if [ ! -x .venv/bin/python ]; then
              python3 -m venv .venv
            fi
            .venv/bin/pip install --upgrade pip setuptools wheel
            if [ -f requirements.txt ]; then
              .venv/bin/pip install -r requirements.txt
            fi
            SVC_CONTENT='[Unit]\nDescription=Udemy Course Bot\nAfter=network.target\n\n[Service]\nType=simple\nWorkingDirectory=/opt/udemybot\nEnvironmentFile=/opt/udemybot/.env\nExecStart=/opt/udemybot/.venv/bin/python /opt/udemybot/main.py\nRestart=always\nRestartSec=5\nUser=root\n\n[Install]\nWantedBy=multi-user.target\n'
            if [ "$(id -u)" -eq 0 ]; then
              printf "%b" "$SVC_CONTENT" > /etc/systemd/system/udemybot.service
              systemctl daemon-reload
              systemctl enable --now udemybot || systemctl restart udemybot || true
            else
              if command -v sudo >/dev/null 2>&1; then
                printf "%b" "$SVC_CONTENT" | sudo tee /etc/systemd/system/udemybot.service >/dev/null || true
                sudo systemctl daemon-reload || true
                sudo systemctl enable --now udemybot || sudo systemctl restart udemybot || true
              else
                echo "systemd install skipped (no root/sudo). Bot can be started manually: .venv/bin/python main.py &" >&2
              fi
            fi
